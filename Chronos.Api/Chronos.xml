<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Chronos.Api</name>
    </assembly>
    <members>
        <member name="M:Chronos.Api.Controllers.AutenticacaoController.ConfirmarUsuario(System.String)">
            <summary>
            Através dessa rota você será capaz de confirmar o e-mail de um usuário.
            </summary>
            <param name="token"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.AutenticacaoController.Login(Chronos.Domain.Contracts.Request.LoginRequest)">
            <summary>
            Através dessa rota você será capaz de realizar o login do usuário para ter acesso aos endpoints da aplicação.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso com o Token para autenticação. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.BaseController`3.CadastrarAsync(`1)">
            <summary>
            Através dessa rota você será capaz de cadastrar um registro no banco
            </summary>
            <returns></returns>
            <response code="200">Sucesso, </response>
        </member>
        <member name="M:Chronos.Api.Controllers.BaseController`3.AlterarAsync(System.Int32,`1)">
            <summary>
            Através dessa rota você será capaz de alterar um registro do banco
            </summary>
            <returns></returns>
            <response code="200">Mensagem - "alterado com sucesso". </response>
        </member>
        <member name="M:Chronos.Api.Controllers.BaseController`3.DeletarAsync(System.Int32)">
            <summary>
            Através dessa rota você será capaz de deletar um registro do banco de dados.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna a mensagem  "Deletado com Sucesso"  </response>
        </member>
        <member name="M:Chronos.Api.Controllers.BaseController`3.ObterTodosAsync">
            <summary>
            Através dessa rota você será capaz de buscar uma listagem de registros
            </summary>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de elementos</response>
        </member>
        <member name="M:Chronos.Api.Controllers.BaseController`3.ObterPorIdAsync(System.Int32)">
            <summary>
            Através dessa rota você será capaz de buscar um registro pelo Id
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna o elemento encontrado via ID</response>
        </member>
        <member name="M:Chronos.Api.Controllers.ProjetoController.CadastrarAsync(Chronos.Domain.Contracts.Request.ProjetoRequest)">
            <summary>
            Através dessa rota você será capaz de cadastrar um projeto.
            </summary>
            <param name="request"></param>
            <returns></returns>
            <response code="201">Sucesso, e retorna mensagem de sucesso. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.ProjetoController.AdicionarColaboradoresAsync(System.Int32,Chronos.Domain.Contracts.Request.ColaboradoresRequest)">
            <summary>
            Através dessa rota você será capaz de adicionar/ativar um colaborador em um projeto.
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <returns></returns>
            <response code="201">Sucesso, e retorna mensagem de sucesso. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.ProjetoController.InativarColaboradoresAsync(System.Int32,Chronos.Domain.Contracts.Request.ColaboradoresRequest)">
            <summary>
            Através dessa rota você será capaz de inativar um colaborador em um projeto.
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.ProjetoController.ObterPorIdAsync(System.Int32)">
            <summary>
            Através dessa rota você será capaz de buscar um projeto pelo Id.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna um projeto.</response>
        </member>
        <member name="M:Chronos.Api.Controllers.ProjetoController.ObterPorUsuarioIdAsync(System.Int32)">
            <summary>
            Através dessa rota você será capaz de listar os projetos de um usuário.
            </summary>
            <param name="usuarioId"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de projetos.</response>
        </member>
        <member name="M:Chronos.Api.Controllers.ProjetoController.AlterarAsync(System.Int32,Chronos.Domain.Contracts.Request.ProjetoRequest)">
            <summary>
            Através dessa rota você será capaz de alterar as informações de um projeto.
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.StartTarefa(System.Int32)">
            <summary>
            Através dessa rota você será capaz de iniciar uma tarefa.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Retorna a tarefa que foi iniciada.</response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.StopTarefa(System.Int32)">
            <summary>
            Através dessa rota você será capaz de finalizar uma tarefa.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Retorna a tarefa que foi finalizada.</response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.DeletarAsync(System.Int32)">
            <summary>
            Através dessa rota você será capaz de deletar uma tarefa.
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso.  </response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.ObterPorUsuarioIdAsync(System.Int32)">
            <summary>
            Através dessa rota você será capaz de listar as tarefas de um usuário.
            </summary>
            <param name="usuarioId"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de tarefas."  </response>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Chronos.Api.Controllers.TarefaController.ObterPorUsuarioIdAsync(System.Int32)" -->
        <member name="M:Chronos.Api.Controllers.TarefaController.ObterTarefasDoDia(System.Int32)">
            <summary>
            Através dessa rota você será capaz de listar as tarefas de um usuário que foram finalizadas no dia.
            </summary>
            <param name="usuarioId"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de tarefas." </response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.ObterTarefasDoMes(System.Int32)">
            <summary>
            Através dessa rota você será capaz de listar as tarefas de um usuário que foram finalizadas no mês.
            </summary>
            <param name="usuarioId"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de tarefas." </response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.ObterTarefasDaSemana(System.Int32)">
            <summary>
            Através dessa rota você será capaz de listar as tarefas de um usuário que foram finalizadas na semana.
            </summary>
            <param name="usuarioId"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de tarefas." </response>
        </member>
        <member name="M:Chronos.Api.Controllers.TarefaController.ObterTarefasDoProjeto(System.Int32)">
            <summary>
            Através dessa rota você será capaz de listar as tarefas de um projeto.
            </summary>
            <param name="projetoId"></param>
            <returns></returns>
            <response code="200">Sucesso, e retorna uma lista de tarefas." </response>
        </member>
        <member name="M:Chronos.Api.Controllers.UsuarioController.CadastrarAsync(Chronos.Domain.Contracts.Request.UsuarioRequest)">
            <summary>
            Através dessa rota você será capaz de cadastrar um usuário.
            </summary>
            <returns></returns>
            <response code="201">Sucesso, e retorna mensagem de sucesso com instruções para utilização da aplicação.</response>
        </member>
        <member name="M:Chronos.Api.Controllers.UsuarioController.EnviarCodigoResetSenha(Chronos.Domain.Contracts.Request.ResetSenhaRequest)">
            <summary>
            Atráves dessa rota será enviado um código para resetar sua senha.
            </summary>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso com instruções para reset de senha. </response>
        </member>
        <member name="M:Chronos.Api.Controllers.UsuarioController.AlterarSenha(Chronos.Domain.Contracts.Request.NovaSenhaRequest)">
            <summary>
            Através dessa rota você será capaz de alterar sua senha.
            </summary>
            <returns></returns>
            <response code="200">Sucesso, e retorna mensagem de sucesso. </response>
        </member>
    </members>
</doc>
